//dynamic programming, knapsack
public class Solution {
    public int findTargetSumWays(int[] nums, int S) {
        if(S>1000||S<-1000){
            return 0;
        }
        int[][] dp=new int[nums.length+1][2001];
        dp[0][1000]=1;
        for(int i=1;i<=nums.length;i++){
            for(int j=0;j<=2000;j++){
                dp[i][j]=(j>=nums[i-1]?dp[i-1][j-nums[i-1]]:0)+(j+nums[i-1]<=2000?dp[i-1][j+nums[i-1]]:0);
            }
        }
        return dp[nums.length][1000+S];
    }
}
